\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{user_needs}

\RequirePackage{xparse}
\RequirePackage{xpatch}
\RequirePackage{xstring}
\RequirePackage[warn]{textcomp}
\RequirePackage{wasysym} 
\RequirePackage{hhline}
\usepackage{expl3}
\usepackage{array}
\usepackage{tabularx}
\usepackage{ifthen}
\usepackage{fp}
\usepackage{pgffor}
\usepackage{etoolbox}
\usepackage{pgffor}
\usepackage{pdftexcmds}


%
% Definitions of status colors
% =====================================

\definecolor{colorGrayText}{RGB}{100,100,100}
\definecolor{colorBlackText}{RGB}{0,0,0}


\definecolor{colorApproved}{RGB}{198,239,206}
\definecolor{colorProposed}{RGB}{255,235,156}
\definecolor{colorObsolete}{RGB}{242,242,242}
\definecolor{colorUnknown}{RGB}{255,199,206}
\definecolor{colorReqBlue}{RGB}{219,229,241}
\definecolor{colorReqRed}{RGB}{242,219,219}

\newcommand{\NeedParameterText}[1]{\textcolor{colorBlackText}{\emph{#1}}}

\newcommand{\NeedGeneratedText}[1]{\textcolor{colorGrayText}{#1}}



%
% Utility commands
% =====================================



% Removes the project prefix part in a full ID
% i.e. "MYPROJECT-SYSRS-4711" results in "SYSRS-04711"
% or   "MYPROJECT-SRS-GUI-4711" results in "SRS-GUI-04711"
\newcommand{\AddLeadingZeros}[1]
{%
  \StrCount{#1}{-}[\slashcount]%                         % get the number of "-"s
  \StrBehind[\slashcount]{#1}{-}[\reqnum]%               % item number is the part behind the last "-"
  \StrBefore[\slashcount]{#1}{-}[\prefix]%               % prefix is the part before the last "-"
  \prefix-{\nplpadding{5}\npthousandsep{}\numprint{\reqnum}}%  % build new ID
}%


% Prints two columns with highlighted item status
\newcommand{\ItemStatus}[1]
{%
  \ifthenelse{\equal{#1}{approved}}%
  {%
    \colorbox{colorApproved}{\textsc{#1}}%
  }%
  {%
    {\ifthenelse{\equal{#1}{proposed}}%
      {%
        \colorbox{colorProposed}{\textsc{#1}}%
      }%
      {\ifthenelse{\equal{#1}{obsolete}}%
        {%
          \colorbox{colorObsolete}{\textsc{#1}}%
        }%
        {\ifthenelse{\equal{#1}{future\space{}feature}}%
          {%
            \colorbox{colorObsolete}{\textsc{#1}}%
          }%
          {%
            \colorbox{colorUnknown}{\textsc{#1}}%
          }%
        }%
      }%
    }%
  }%
}%




% Draws a trinagle, pointing to the parent item ID
\newcommand\ListParent[1]
{
  \@ifundefined{r@sec:#1}
  {$\rhd$\space{}\AddLeadingZeros{#1}\newline}
  {$\rhd$\space{}\hyperref[req:#1]{\AddLeadingZeros{#1}~\nameref{sec:#1}~(chapter \ref{sec:#1} on page \pageref{sec:#1})}\newline}
}

% Splits parent IDs and and lists them
\NewDocumentCommand\ListParents{>{\SplitList{,}}m}
{
  \ProcessList{#1}{\ListParent}
}

% Prints two columns with the item parent(s)
\newcommand{\ItemParents}[1]
{
  \IfSubStr{#1}{,}
  {\textbf{Parents:} & \ListParents{#1}}
  {\textbf{Parents:} & $\rhd$\space{}\AddLeadingZeros{#1}}
  \\ \hline
}


% Lists an item variant.
% If a label exists in the format 'sec:<name-of-the-variant>' a reference is added.
\makeatletter%
\newcommand\ListVariant[1]%
{%
  \@ifundefined{r@sec:#1}%
  {\textbullet~#1\newline}%
  {\textbullet~#1\space{}\begin{small}(see\space{}chapter\space{}``\nameref{sec:#1}'')\end{small}\newline}%
}%
\makeatother%

% Splits and processes a list of applicable variants
\NewDocumentCommand\ListVariants{>{\SplitList{,}}m}%
{%
  \ProcessList{#1}{\ListVariant}%
}%

% Prints two columns with the applicable variant(s)
\newcommand{\ItemVariants}[1]%
{%
	\IfStrEq{#1}{\empty}{}{}%
  \IfSubStr{#1}{,}%
  {\ListVariants{#1}\vspace{-1em}}%
  {#1}%
}%


% Prints a item flag.
\newcommand\ListFlag[1]
{
  \ifthenelse{\equal{#1}{flag-SAFE}}
  {
    \XBox\space{}risk\space{}mitigation\space{}measure \newline
  }
  {
    \ifthenelse{\equal{#1}{flag-SW}}
    {
      \XBox\space{}realized\space{}in\space{}software\space{}\newline
    }
    {
      \ifthenelse{\equal{#1}{flag-HW}}
      {
        \XBox\space{}realized\space{}in\space{}hardware \newline
      }
      {
        \ifthenelse{\equal{#1}{flag-MECH}}
        {
          \XBox\space{}realized\space{}in\space{}mechanics \newline
        }
        {
          \ifthenelse{\equal{#1}{flag-GUI}}
          {
            \XBox\space{}related\space{}to\space{}GUI \newline
          }
          {
            #1 \newline
          }
        }
      }
    }
  }
}

% Prints a list of item flags.
\NewDocumentCommand\ListFlags{>{\SplitList{,}}m}
{
  \ProcessList{#1}{\ListFlag}
}


% Prints two columns with a list of item flags
\newcommand\ItemFlags[1]
{
  \textbf{Flags:} & \ListFlags{#1}
  \\ \hline
}



% Prints two columns with a comment
\newcommand{\ItemComment}[1]
{
  \textbf{Comment:} & #1 \\ \hline
}


% Lists the IDs of areferenced an item.
% If a label exists in the format 'req:<id-of-the-referenced-item>' a reference-link is added.
\makeatletter
\newcommand\ListReference[1]
{
  \@ifundefined{r@req:#1}
  {$\rightarrow$\space{}\AddLeadingZeros{#1}\newline}
  {\hyperref[req:#1]{\AddLeadingZeros{#1}}\newline}
}
\makeatother


% Prints two columns with a list of references to other items
\NewDocumentCommand\ItemReferences{>{\SplitList{,}}m}
{
  \textbf{References:} &
  \ProcessList{#1}{\ListReference}
  \\ \hline
}









% Prints the user role
\newcommand{\UserNeedRole}[1]%
{%
	\textbf{Role} & \NeedGeneratedText{As a} \NeedParameterText{#1} \\%
}%

% Prints the situation
\newcommand{\UserNeedSituation}[1]%
{%
	\textbf{Situation} & \NeedParameterText{#1}, \\%
}%

% Prints the demand
\newcommand{\UserNeedDemand}[1]%
{%
	\textbf{Demand} & \NeedGeneratedText{I want} \NeedParameterText{#1}, \\%
}%

% Prints the purpose
\newcommand{\UserNeedPurpose}[1]%
{%
	\textbf{Purpose} & \NeedGeneratedText{so that} \NeedParameterText{#1}. \\ \hline %
}%


\makeatletter
\def\thickhline{%
  \noalign{\ifnum0=`}\fi\hrule \@height \thickarrayrulewidth \futurelet
  \reserved@a\@xthickhline}
\def\@xthickhline{\ifx\reserved@a\thickhline
  \vskip\doublerulesep
  \vskip-\thickarrayrulewidth
  \fi
  \ifnum0=`{\fi}}
\makeatother


\newlength{\thickarrayrulewidth}
\setlength{\thickarrayrulewidth}{2\arrayrulewidth}

%
% User need environments
% =====================================

\gdef\ListOfIDs{}

% Defines a user need
% Parameters:
% ID prefix (i.e. MYPROJECT-NEED-)
% need ID (i.e. 4711)
% need text
\newenvironment{UserNeed}[7] % ID prefix, ID, as a, when, I want, so that, comment
{%
  \IfSubStr{\ListOfIDs}{#1#2,}%
  {\PackageError{user_needs}{ID #1#2 already exists.}{Do not assign ID multiple times.}}%
  {%
  \label{req:#1#2}%
  \expandafter\gdef\expandafter\ListOfIDs\expandafter{\ListOfIDs#1#2,}%
	\def\MyVariants{\ItemVariants{#3}}%
	\def\MyStatus{\ItemStatus{#4}}%
	\def\MyDate{#5}%
  \footnotesize %
	\tabularx{\textwidth}{|l|X|}%
 	\hline %
 	\textbf{ID} & \textbf{\AddLeadingZeros{#1#2}}\\%
 	\hline %
  }%
}%
{%
  \endtabularx%
  \def\myheight{\dimexpr \parskip + \arraystretch pt \relax}%
	\par\nopagebreak\vspace{-\myheight}%
  \begin{tabularx}{\textwidth}{|XX|lR|lR|}%
	\textbf{Applicable variants} & \MyVariants & \textbf{Status} & \MyStatus & \textbf{Date} & \MyDate \\%
	\hline %
	\end{tabularx}%
}%

\ExplSyntaxOff
